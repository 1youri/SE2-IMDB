@using SE2_IMDB.Models.Entity
@model SE2_IMDB.Models.Entity.Person

@{
    ViewBag.Title = "Edit";

    Account current = Account.GetID(HttpContext.Current);
    if (current.Role != "ADMINISTRATOR" && current.Role != "MODERATOR")
    {
        StaticData.Message = "You do not have enough priviliges to access this page!";
        Response.Redirect("~/Home");
    }
}

<h2>Edit</h2>

@if (Model.ID > 0)
{
    using (Html.BeginForm("Edit", "Person", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Person</h4>
            <hr />
            <div class="row">
                <div class="col-md-9">
                    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                    @Html.HiddenFor(model => model.ID)
                    @Html.HiddenFor(model => model.Rating)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control", rows = "6" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
                <div class="col-md-3">

                    @if (Model.ImagePath.Length > 1)
                    {
                        <img src="@Url.Content("~/Uploads/Persons/" + Model.ImagePath)" style="max-width: 100%; max-height: 300px"/>
                    }
                    else
                    {
                        <img src="@Url.Content("~/Uploads/NOTFOUND.png")" style="max-width: 100%; height: 300px"/>
                    }


                    <div class="form-group">
                        <p class="col-md-12">
                            <strong>Change Image</strong>
                        </p>
                        <div class="col-md-12">
                            <input type="file" id="Image" name="upload"/>
                        </div>
                    </div>
                </div>

            </div>
            <div class="form-group">
                <div class="col-md-offset-1 col-md-11">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
}
else
{
    <h3>Person could not be found!</h3>
    <p>Person with ID: [ @(Model.ID * -1) ] could not be found in the database and thus cannot be edited.</p>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
