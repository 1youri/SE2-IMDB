@model SE2_IMDB.Models.Entity.Film

@{
    ViewBag.Title = "Film Bewerken";
}

<h2>Bewerken</h2>

@if (Model.ID > 0)
{
    using (Html.BeginForm("Edit", "Film", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Film</h4>
            <hr />
            <div class="row">
                <div class="col-md-8">
                    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                    @Html.HiddenFor(model => model.ID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control", @rows = "6"}})
                            @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ReleaseYear, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ReleaseYear, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.ReleaseYear, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StoryLine, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StoryLine, new {htmlAttributes = new {@class = "form-control", @rows = "6"}})
                            @Html.ValidationMessageFor(model => model.StoryLine, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    
                    @if (Model.ImagePath.Length > 1)
                    {
                        <img src="@Url.Content("~/Uploads/Films/" + Model.ImagePath)" style="max-width: 100%; max-height: 300px" />
                    }
                    else
                    {
                        <img src="@Url.Content("~/Uploads/NOTFOUND.png")" style="max-width: 100%; height: 300px" />
                    }


                    <div class="form-group">
                        <p class="col-md-12"><strong>Change Image</strong>
                        </p>
                        <div class="col-md-12">
                            <input type="file" id="Avatar" name="upload"/>
                        </div>
                    </div>
                </div>

            </div>

        </div>
    }
}
else
{
    <h3>Film niet gevonden!</h3>
    <p>Film met het ID: [ @(Model.ID * -1) ] kan niet worden gevonden, en dus ook niet worden aangepast.</p>
}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
